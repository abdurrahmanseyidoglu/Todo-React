{"version":3,"sources":["component/main_todo.js","App.jsx","reportWebVitals.js","index.js"],"names":["Todo","props","todos","deleteTodo","useState","items","setItems","useEffect","className","values","onChange","oldIndex","newIndex","arrayMove","renderList","children","renderItem","value","style","wordWrap","task","backgroundColor","color","border","onClick","id","TodoList","todo","setTodo","width","display","alinItems","justifyContent","onSubmit","e","preventDefault","trim","addTodo","type","placeholder","target","fontSize","App","setTodos","taskObj","length","temp","concat","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAIe,SAASA,EAAKC,GAC3B,IAAQC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WACf,EAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAKA,OAHAC,qBAAU,WACRD,EAASJ,KACR,CAACA,IAEF,qBAAKM,UAAU,OAAf,SACE,cAAC,OAAD,CACEC,OAAQJ,EACRK,SAAU,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACRN,EAASO,oBAAUR,EAAOM,EAAUC,KAEtCE,WAAY,gBAAGC,EAAH,EAAGA,SAAUd,EAAb,EAAaA,MAAb,OAAyB,8CAAQA,GAAR,aAAgBc,MACrDC,WAAY,gBAAGC,EAAH,EAAGA,MAAOhB,EAAV,EAAUA,MAAV,OACV,gCACE,8BACE,6CACEO,UAAU,0CACVU,MAAO,CAAEC,SAAU,cACflB,GAHN,wBAMMgB,EAAMG,MACV,wBACEZ,UAAU,iBACVU,MAAO,CACLG,gBAAiB,UACjBC,MAAO,UACPC,OAAQ,QAEVC,QAAS,kBAAMrB,EAAWc,EAAMQ,KAPlC,0BAaJ,yBAtBQR,EAAMQ,SA8BnB,SAASC,EAASzB,GACvB,MAAwBG,mBAAS,IAAjC,mBAAOuB,EAAP,KAAaC,EAAb,KASA,OACE,qBAAKpB,UAAU,WAAf,SACE,sBACEU,MAAO,CACLW,MAAO,MACPC,QAAS,OACTC,UAAW,SACXC,eAAgB,UAElBC,SAhBN,SAAwBC,GACtBA,EAAEC,iBAEER,EAAKS,QAAQnC,EAAMoC,QAAQV,GAC/BC,EAAQ,KAKN,SASE,sBAAKpB,UAAU,kCAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,mBAEF,uBACEA,UAAU,eACV8B,KAAK,OACLrB,MAAOU,EACPY,YAAY,WACZ7B,SAAU,SAACwB,GAAD,OAAON,EAAQM,EAAEM,OAAOvB,UAEpC,wBACEqB,KAAK,SACL9B,UAAU,kBACVU,MAAO,CAAEuB,SAAU,UAHrB,6BChDKC,MA9Bf,WACE,MAA0BtC,mBAAS,IAAnC,mBAAOF,EAAP,KAAcyC,EAAd,KAaA,OACE,sBAAKnC,UAAU,gBAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAACkB,EAAD,CAAUW,QAhBpB,SAAiBjB,GACf,IAAMwB,EAAU,CAAEnB,GAAIvB,EAAM2C,OAAQzB,KAAMA,GACpC0B,EAAO5C,EAAM6C,OAAO,CAACH,IAC3BD,EAASG,MAa8B,OAC1B,IACP,sBAAKtC,UAAU,SAAf,UACE,cAACR,EAAD,CAAME,MAAOA,EAAOC,WAb9B,SAAoBsB,GAClB,IAAMqB,EAAO5C,EAAM8C,QAAO,SAACrB,GAAD,OAAUA,EAAKF,KAAOA,KAChDkB,EAASG,MAW8C,OAC1C,OACF,OACF,QCjBEG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3477f7ef.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { List, arrayMove } from \"react-movable\";\r\nimport \"./main.css\";\r\n\r\nexport default function Todo(props) {\r\n  const { todos, deleteTodo } = props;\r\n  const [items, setItems] = useState(todos);\r\n\r\n  useEffect(() => {\r\n    setItems(todos);\r\n  }, [todos]);\r\n  return (\r\n    <div className=\"mb-5\">\r\n      <List\r\n        values={items}\r\n        onChange={({ oldIndex, newIndex }) =>\r\n          setItems(arrayMove(items, oldIndex, newIndex))\r\n        }\r\n        renderList={({ children, props }) => <ul {...props}>{children}</ul>}\r\n        renderItem={({ value, props }) => (\r\n          <div key={value.id}>\r\n            <div>\r\n              <li\r\n                className=\"row d-flex justify-content-between mb-3\"\r\n                style={{ wordWrap: \"breakWord\" }}\r\n                {...props}\r\n              >\r\n                {/* `${value.id + 1}-  */}\r\n                {`${value.task}`}\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  style={{\r\n                    backgroundColor: \"#D5E6FF\",\r\n                    color: \"#2560C1\",\r\n                    border: \"none\",\r\n                  }}\r\n                  onClick={() => deleteTodo(value.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TodoList(props) {\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  function handleOnSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (todo.trim()) props.addTodo(todo);\r\n    setTodo(\"\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"add mb-5\">\r\n      <form\r\n        style={{\r\n          width: \"90%\",\r\n          display: \"flex\",\r\n          alinItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        onSubmit={handleOnSubmit}\r\n      >\r\n        <div className=\"input-group input-group-lg ml-5\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Add</span>\r\n          </div>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            value={todo}\r\n            placeholder=\"Add Todo\"\r\n            onChange={(e) => setTodo(e.target.value)}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            style={{ fontSize: \"1.2rem\" }}\r\n          >\r\n            Add Task\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Todo, { TodoList } from \"./component/main_todo\";\r\nimport React, { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  function addTodo(task) {\r\n    const taskObj = { id: todos.length, task: task };\r\n    const temp = todos.concat([taskObj]);\r\n    setTodos(temp);\r\n  }\r\n\r\n  function deleteTodo(id) {\r\n    const temp = todos.filter((todo) => todo.id !== id);\r\n    setTodos(temp);\r\n  }\r\n\r\n  return (\r\n    <div className=\"app container\">\r\n      <div className=\"row\">\r\n        <div className=\" col-12 \">\r\n          <div className=\"col-12 mt-4 \">\r\n            <TodoList addTodo={addTodo} />{\" \"}\r\n          </div>{\" \"}\r\n          <div className=\"col-12\">\r\n            <Todo todos={todos} deleteTodo={deleteTodo} />{\" \"}\r\n          </div>{\" \"}\r\n        </div>{\" \"}\r\n      </div>{\" \"}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}